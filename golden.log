21> starting: python3 solutions/interpret_week3.py 'jpamb.cases.Arrays.arrayContent:()V' '()'
21> read decompiled classfile decompiled/jpamb/cases/Arrays.json
21> STEP 0:
21>   PC: 0 {'offset': 0, 'opr': 'push', 'value': {'type': 'integer', 'value': 5}}
21>   LOCALS: []
21>   STACK: []
21> STEP 1:
21>   PC: 1 {'dim': 1, 'offset': 1, 'opr': 'newarray', 'type': 'int'}
21>   LOCALS: []
21>   STACK: [5]
21> STEP 2:
21>   PC: 2 {'offset': 3, 'opr': 'dup', 'words': 1}
21>   LOCALS: []
21>   STACK: [[None, None, None, None, None], 5]
21> STEP 3:
21>   PC: 3 {'offset': 4, 'opr': 'push', 'value': {'type': 'integer', 'value': 0}}
21>   LOCALS: []
21>   STACK: [[None, None, None, None, None], [None, None, None, None, None], 5]
21> STEP 4:
21>   PC: 4 {'offset': 5, 'opr': 'push', 'value': {'type': 'integer', 'value': 1}}
21>   LOCALS: []
21>   STACK: [0, [None, None, None, None, None], [None, None, None, None, None], 5]
21> STEP 5:
21>   PC: 5 {'offset': 6, 'opr': 'array_store', 'type': 'int'}
21>   LOCALS: []
21>   STACK: [1, 0, [None, None, None, None, None], [None, None, None, None, None], 5]
21> STEP 6:
21>   PC: 6 {'offset': 7, 'opr': 'dup', 'words': 1}
21>   LOCALS: []
21>   STACK: [[1, None, None, None, None], 5]
21> STEP 7:
21>   PC: 7 {'offset': 8, 'opr': 'push', 'value': {'type': 'integer', 'value': 1}}
21>   LOCALS: []
21>   STACK: [[1, None, None, None, None], [1, None, None, None, None], 5]
21> STEP 8:
21>   PC: 8 {'offset': 9, 'opr': 'push', 'value': {'type': 'integer', 'value': 2}}
21>   LOCALS: []
21>   STACK: [1, [1, None, None, None, None], [1, None, None, None, None], 5]
21> STEP 9:
21>   PC: 9 {'offset': 10, 'opr': 'array_store', 'type': 'int'}
21>   LOCALS: []
21>   STACK: [2, 1, [1, None, None, None, None], [1, None, None, None, None], 5]
21> STEP 10:
21>   PC: 10 {'offset': 11, 'opr': 'dup', 'words': 1}
21>   LOCALS: []
21>   STACK: [[1, 2, None, None, None], 5]
21> STEP 11:
21>   PC: 11 {'offset': 12, 'opr': 'push', 'value': {'type': 'integer', 'value': 2}}
21>   LOCALS: []
21>   STACK: [[1, 2, None, None, None], [1, 2, None, None, None], 5]
21> STEP 12:
21>   PC: 12 {'offset': 13, 'opr': 'push', 'value': {'type': 'integer', 'value': 100}}
21>   LOCALS: []
21>   STACK: [2, [1, 2, None, None, None], [1, 2, None, None, None], 5]
21> STEP 13:
21>   PC: 13 {'offset': 15, 'opr': 'array_store', 'type': 'int'}
21>   LOCALS: []
21>   STACK: [100, 2, [1, 2, None, None, None], [1, 2, None, None, None], 5]
21> STEP 14:
21>   PC: 14 {'offset': 16, 'opr': 'dup', 'words': 1}
21>   LOCALS: []
21>   STACK: [[1, 2, 100, None, None], 5]
21> STEP 15:
21>   PC: 15 {'offset': 17, 'opr': 'push', 'value': {'type': 'integer', 'value': 3}}
21>   LOCALS: []
21>   STACK: [[1, 2, 100, None, None], [1, 2, 100, None, None], 5]
21> STEP 16:
21>   PC: 16 {'offset': 18, 'opr': 'push', 'value': {'type': 'integer', 'value': -13}}
21>   LOCALS: []
21>   STACK: [3, [1, 2, 100, None, None], [1, 2, 100, None, None], 5]
21> STEP 17:
21>   PC: 17 {'offset': 20, 'opr': 'array_store', 'type': 'int'}
21>   LOCALS: []
21>   STACK: [-13, 3, [1, 2, 100, None, None], [1, 2, 100, None, None], 5]
21> STEP 18:
21>   PC: 18 {'offset': 21, 'opr': 'dup', 'words': 1}
21>   LOCALS: []
21>   STACK: [[1, 2, 100, -13, None], 5]
21> STEP 19:
21>   PC: 19 {'offset': 22, 'opr': 'push', 'value': {'type': 'integer', 'value': 4}}
21>   LOCALS: []
21>   STACK: [[1, 2, 100, -13, None], [1, 2, 100, -13, None], 5]
21> STEP 20:
21>   PC: 20 {'offset': 23, 'opr': 'push', 'value': {'type': 'integer', 'value': 23}}
21>   LOCALS: []
21>   STACK: [4, [1, 2, 100, -13, None], [1, 2, 100, -13, None], 5]
21> STEP 21:
21>   PC: 21 {'offset': 25, 'opr': 'array_store', 'type': 'int'}
21>   LOCALS: []
21>   STACK: [23, 4, [1, 2, 100, -13, None], [1, 2, 100, -13, None], 5]
21> STEP 22:
21>   PC: 22 {'index': 0, 'offset': 26, 'opr': 'store', 'type': 'ref'}
21>   LOCALS: []
21>   STACK: [[1, 2, 100, -13, 23], 5]
21> STEP 23:
21>   PC: 23 {'offset': 27, 'opr': 'push', 'value': {'type': 'integer', 'value': 0}}
21>   LOCALS: [[1, 2, 100, -13, 23]]
21>   STACK: [5]
21> STEP 24:
21>   PC: 24 {'index': 1, 'offset': 28, 'opr': 'store', 'type': 'int'}
21>   LOCALS: [[1, 2, 100, -13, 23]]
21>   STACK: [0, 5]
21> STEP 25:
21>   PC: 25 {'index': 1, 'offset': 29, 'opr': 'load', 'type': 'int'}
21>   LOCALS: [[1, 2, 100, -13, 23], 0]
21>   STACK: [5]
21> STEP 26:
21>   PC: 26 {'index': 0, 'offset': 30, 'opr': 'load', 'type': 'ref'}
21>   LOCALS: [[1, 2, 100, -13, 23], 0]
21>   STACK: [0, 5]
21> STEP 27:
21>   PC: 27 {'offset': 31, 'opr': 'arraylength'}
21>   LOCALS: [[1, 2, 100, -13, 23], 0]
21>   STACK: [[1, 2, 100, -13, 23], 0, 5]
21> STEP 28:
21>   PC: 28 {'condition': 'ge', 'offset': 32, 'opr': 'if', 'target': 39}
21>   LOCALS: [[1, 2, 100, -13, 23], 0]
21>   STACK: [5, [1, 2, 100, -13, 23], 0, 5]
21> STEP 29:
21>   PC: 39 {'offset': 59, 'opr': 'return', 'type': None}
21>   LOCALS: [[1, 2, 100, -13, 23], 0]
21>   STACK: [0, 5]
21> DONE ok
21>   LOCALS: [[1, 2, 100, -13, 23], 0]
21>   STACK: [0, 5]
21> done
U3> starting: python3 solutions/interpret_week3.py 'jpamb.cases.Arrays.arrayInBounds:()V' '()'
U3> read decompiled classfile decompiled/jpamb/cases/Arrays.json
U3> STEP 0:
U3>   PC: 0 {'offset': 0, 'opr': 'push', 'value': {'type': 'integer', 'value': 2}}
U3>   LOCALS: []
U3>   STACK: []
U3> STEP 1:
U3>   PC: 1 {'dim': 1, 'offset': 1, 'opr': 'newarray', 'type': 'int'}
U3>   LOCALS: []
U3>   STACK: [2]
U3> STEP 2:
U3>   PC: 2 {'offset': 3, 'opr': 'dup', 'words': 1}
U3>   LOCALS: []
U3>   STACK: [[None, None], 2]
U3> STEP 3:
U3>   PC: 3 {'offset': 4, 'opr': 'push', 'value': {'type': 'integer', 'value': 0}}
U3>   LOCALS: []
U3>   STACK: [[None, None], [None, None], 2]
U3> STEP 4:
U3>   PC: 4 {'offset': 5, 'opr': 'push', 'value': {'type': 'integer', 'value': 0}}
U3>   LOCALS: []
U3>   STACK: [0, [None, None], [None, None], 2]
U3> STEP 5:
U3>   PC: 5 {'offset': 6, 'opr': 'array_store', 'type': 'int'}
U3>   LOCALS: []
U3>   STACK: [0, 0, [None, None], [None, None], 2]
U3> STEP 6:
U3>   PC: 6 {'offset': 7, 'opr': 'dup', 'words': 1}
U3>   LOCALS: []
U3>   STACK: [[0, None], 2]
U3> STEP 7:
U3>   PC: 7 {'offset': 8, 'opr': 'push', 'value': {'type': 'integer', 'value': 1}}
U3>   LOCALS: []
U3>   STACK: [[0, None], [0, None], 2]
U3> STEP 8:
U3>   PC: 8 {'offset': 9, 'opr': 'push', 'value': {'type': 'integer', 'value': 0}}
U3>   LOCALS: []
U3>   STACK: [1, [0, None], [0, None], 2]
U3> STEP 9:
U3>   PC: 9 {'offset': 10, 'opr': 'array_store', 'type': 'int'}
U3>   LOCALS: []
U3>   STACK: [0, 1, [0, None], [0, None], 2]
U3> STEP 10:
U3>   PC: 10 {'index': 0, 'offset': 11, 'opr': 'store', 'type': 'ref'}
U3>   LOCALS: []
U3>   STACK: [[0, 0], 2]
U3> STEP 11:
U3>   PC: 11 {'index': 0, 'offset': 12, 'opr': 'load', 'type': 'ref'}
U3>   LOCALS: [[0, 0]]
U3>   STACK: [2]
U3> STEP 12:
U3>   PC: 12 {'offset': 13, 'opr': 'push', 'value': {'type': 'integer', 'value': 1}}
U3>   LOCALS: [[0, 0]]
U3>   STACK: [[0, 0], 2]
U3> STEP 13:
U3>   PC: 13 {'offset': 14, 'opr': 'push', 'value': {'type': 'integer', 'value': 1}}
U3>   LOCALS: [[0, 0]]
U3>   STACK: [1, [0, 0], 2]
U3> STEP 14:
U3>   PC: 14 {'offset': 15, 'opr': 'array_store', 'type': 'int'}
U3>   LOCALS: [[0, 0]]
U3>   STACK: [1, 1, [0, 0], 2]
U3> STEP 15:
U3>   PC: 15 {'offset': 16, 'opr': 'return', 'type': None}
U3>   LOCALS: [[0, 1]]
U3>   STACK: [2]
U3> DONE ok
U3>   LOCALS: [[0, 1]]
U3>   STACK: [2]
U3> done
vn> starting: python3 solutions/interpret_week3.py 'jpamb.cases.Arrays.arrayIsNull:()V' '()'
vn> read decompiled classfile decompiled/jpamb/cases/Arrays.json
vn> STEP 0:
vn>   PC: 0 {'offset': 0, 'opr': 'push', 'value': None}
vn>   LOCALS: []
vn>   STACK: []
vn> STEP 1:
vn>   PC: 1 {'index': 0, 'offset': 1, 'opr': 'store', 'type': 'ref'}
vn>   LOCALS: []
vn>   STACK: [None]
vn> STEP 2:
vn>   PC: 2 {'index': 0, 'offset': 2, 'opr': 'load', 'type': 'ref'}
vn>   LOCALS: [None]
vn>   STACK: []
vn> STEP 3:
vn>   PC: 3 {'offset': 3, 'opr': 'push', 'value': {'type': 'integer', 'value': 1}}
vn>   LOCALS: [None]
vn>   STACK: [None]
vn> STEP 4:
vn>   PC: 4 {'offset': 4, 'opr': 'push', 'value': {'type': 'integer', 'value': 10}}
vn>   LOCALS: [None]
vn>   STACK: [1, None]
vn> STEP 5:
vn>   PC: 5 {'offset': 6, 'opr': 'array_store', 'type': 'int'}
vn>   LOCALS: [None]
vn>   STACK: [10, 1, None]
vn> DONE null pointer
vn>   LOCALS: [None]
vn>   STACK: []
vn> done
kJ> starting: python3 solutions/interpret_week3.py 'jpamb.cases.Arrays.arrayIsNullLength:()V' '()'
kJ> read decompiled classfile decompiled/jpamb/cases/Arrays.json
kJ> STEP 0:
kJ>   PC: 0 {'offset': 0, 'opr': 'push', 'value': None}
kJ>   LOCALS: []
kJ>   STACK: []
kJ> STEP 1:
kJ>   PC: 1 {'index': 0, 'offset': 1, 'opr': 'store', 'type': 'ref'}
kJ>   LOCALS: []
kJ>   STACK: [None]
kJ> STEP 2:
kJ>   PC: 2 {'field': {'class': 'jpamb/cases/Arrays', 'name': '$assertionsDisabled', 'type': 'boolean'}, 'offset': 2, 'opr': 'get', 'static': True}
kJ>   LOCALS: [None]
kJ>   STACK: []
kJ> STEP 3:
kJ>   PC: 3 {'condition': 'ne', 'offset': 5, 'opr': 'ifz', 'target': 11}
kJ>   LOCALS: [None]
kJ>   STACK: [False]
kJ> STEP 4:
kJ>   PC: 4 {'index': 0, 'offset': 8, 'opr': 'load', 'type': 'ref'}
kJ>   LOCALS: [None]
kJ>   STACK: []
kJ> STEP 5:
kJ>   PC: 5 {'offset': 9, 'opr': 'arraylength'}
kJ>   LOCALS: [None]
kJ>   STACK: [None]
kJ> DONE null pointer
kJ>   LOCALS: [None]
kJ>   STACK: [None]
kJ> done
Ly> starting: python3 solutions/interpret_week3.py 'jpamb.cases.Arrays.arrayLength:()V' '()'
Ly> read decompiled classfile decompiled/jpamb/cases/Arrays.json
Ly> STEP 0:
Ly>   PC: 0 {'offset': 0, 'opr': 'push', 'value': {'type': 'integer', 'value': 2}}
Ly>   LOCALS: []
Ly>   STACK: []
Ly> STEP 1:
Ly>   PC: 1 {'dim': 1, 'offset': 1, 'opr': 'newarray', 'type': 'int'}
Ly>   LOCALS: []
Ly>   STACK: [2]
Ly> STEP 2:
Ly>   PC: 2 {'offset': 3, 'opr': 'dup', 'words': 1}
Ly>   LOCALS: []
Ly>   STACK: [[None, None], 2]
Ly> STEP 3:
Ly>   PC: 3 {'offset': 4, 'opr': 'push', 'value': {'type': 'integer', 'value': 0}}
Ly>   LOCALS: []
Ly>   STACK: [[None, None], [None, None], 2]
Ly> STEP 4:
Ly>   PC: 4 {'offset': 5, 'opr': 'push', 'value': {'type': 'integer', 'value': 0}}
Ly>   LOCALS: []
Ly>   STACK: [0, [None, None], [None, None], 2]
Ly> STEP 5:
Ly>   PC: 5 {'offset': 6, 'opr': 'array_store', 'type': 'int'}
Ly>   LOCALS: []
Ly>   STACK: [0, 0, [None, None], [None, None], 2]
Ly> STEP 6:
Ly>   PC: 6 {'offset': 7, 'opr': 'dup', 'words': 1}
Ly>   LOCALS: []
Ly>   STACK: [[0, None], 2]
Ly> STEP 7:
Ly>   PC: 7 {'offset': 8, 'opr': 'push', 'value': {'type': 'integer', 'value': 1}}
Ly>   LOCALS: []
Ly>   STACK: [[0, None], [0, None], 2]
Ly> STEP 8:
Ly>   PC: 8 {'offset': 9, 'opr': 'push', 'value': {'type': 'integer', 'value': 0}}
Ly>   LOCALS: []
Ly>   STACK: [1, [0, None], [0, None], 2]
Ly> STEP 9:
Ly>   PC: 9 {'offset': 10, 'opr': 'array_store', 'type': 'int'}
Ly>   LOCALS: []
Ly>   STACK: [0, 1, [0, None], [0, None], 2]
Ly> STEP 10:
Ly>   PC: 10 {'index': 0, 'offset': 11, 'opr': 'store', 'type': 'ref'}
Ly>   LOCALS: []
Ly>   STACK: [[0, 0], 2]
Ly> STEP 11:
Ly>   PC: 11 {'field': {'class': 'jpamb/cases/Arrays', 'name': '$assertionsDisabled', 'type': 'boolean'}, 'offset': 12, 'opr': 'get', 'static': True}
Ly>   LOCALS: [[0, 0]]
Ly>   STACK: [2]
Ly> STEP 12:
Ly>   PC: 12 {'condition': 'ne', 'offset': 15, 'opr': 'ifz', 'target': 21}
Ly>   LOCALS: [[0, 0]]
Ly>   STACK: [False, 2]
Ly> STEP 13:
Ly>   PC: 13 {'index': 0, 'offset': 18, 'opr': 'load', 'type': 'ref'}
Ly>   LOCALS: [[0, 0]]
Ly>   STACK: [2]
Ly> STEP 14:
Ly>   PC: 14 {'offset': 19, 'opr': 'arraylength'}
Ly>   LOCALS: [[0, 0]]
Ly>   STACK: [[0, 0], 2]
Ly> STEP 15:
Ly>   PC: 15 {'offset': 20, 'opr': 'push', 'value': {'type': 'integer', 'value': 2}}
Ly>   LOCALS: [[0, 0]]
Ly>   STACK: [2, [0, 0], 2]
Ly> STEP 16:
Ly>   PC: 16 {'condition': 'eq', 'offset': 21, 'opr': 'if', 'target': 21}
Ly>   LOCALS: [[0, 0]]
Ly>   STACK: [2, 2, [0, 0], 2]
Ly> STEP 17:
Ly>   PC: 21 {'offset': 32, 'opr': 'return', 'type': None}
Ly>   LOCALS: [[0, 0]]
Ly>   STACK: [[0, 0], 2]
Ly> DONE ok
Ly>   LOCALS: [[0, 0]]
Ly>   STACK: [[0, 0], 2]
Ly> done
A4> starting: python3 solutions/interpret_week3.py 'jpamb.cases.Arrays.arrayNotEmpty:([I)V' '([I:1])'
A4> Traceback (most recent call last):
A4>   File "/Users/beatz/Documents/uddannelse/informationsteknologi/programanalyse/jpamb/solutions/interpret_week3.py", line 403, in <module>
A4>     methodid = MethodId.parse(sys.argv[1])
A4>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
A4>   File "/Users/beatz/Documents/uddannelse/informationsteknologi/programanalyse/jpamb/solutions/interpret_week3.py", line 43, in parse
A4>     params=[TYPE_LOOKUP[p] for p in i["params"]],
A4>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
A4>   File "/Users/beatz/Documents/uddannelse/informationsteknologi/programanalyse/jpamb/solutions/interpret_week3.py", line 43, in <listcomp>
A4>     params=[TYPE_LOOKUP[p] for p in i["params"]],
A4>             ~~~~~~~~~~~^^^
A4> KeyError: '['
